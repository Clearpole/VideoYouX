name: Android CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - "README.md"
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'corretto'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: |
        echo ${{ secrets.SIGNING_KEY }} | base64 -d > keystore.jks
        bash ./gradlew assemble
      env:
        KEYSTORE_PATH: "../keystore.jks"
        KEYSTORE_PASS: ${{ secrets.KEY_STORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Find APK
      run: |
        echo "RELEASE=$(find 'app/build/outputs/apk/release' -name '*.apk')" >> $GITHUB_ENV
        echo "DEBUG=$(find 'app/build/outputs/apk/debug' -name '*.apk')" >> $GITHUB_ENV

    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: VideoYouX_Release
        path: "app/build/outputs/apk/release/*.apk"

    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: VideoYouX_Debug
        path: "app/build/outputs/apk/debug/*.apk"

    - name: Post to Channel
      if: github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[skip post]') == false
      env:
          CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          RELEASE: ${{ env.RELEASE }}
          DEBUG: ${{ env.DEBUG }}
          COMMIT_MESSAGE: |+
            GitHub New CI\
            
            `${{ github.event.head_commit.message }}`
            by `${{ github.event.head_commit.author.name }}`
            
            See commit detail [here](${{ github.event.head_commit.url }})
      run: |
          ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Frelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fdebug%22%2C%22parse_mode%22%3A%22MarkdownV2%22%2C%22caption%22%3A${ESCAPED}%7D%5D"  -F release="@$RELEASE" -F debug="@$DEBUG"
